{"version":3,"sources":["webpack://src/css/reset.scss","webpack://src/css/_setting.scss","webpack://src/public/pb.module.scss"],"names":[],"mappings":"AAAA,WAKA,yBACI,CAAA,uJAGF,CAAA,WAAA,yBACE,CAAA,uJAIA,CAAA,WAAA,2BAAA,CAAA,2JAIA,CAAA,WAAA,0BAAA,CAAA,yJAIA,CAAA,WAAA,8BAAA,CAAA,iKAIA,CAAA,WAAA,6BAAA,CAAA,+JAIA,CAAA,WAAA,+BAGF,CAAA,mKAEE,CAAA,WAEF,kCACE,CAAA,yKAGF,CAAA,WACE,gCAAA,CAAA,qKAQA,CAAA,WAAA,6BAQJ,CAAA,+JCkLQ,CAAA,WAAA,CAAA,iBAAA,kBAAA,CAAA,sBAAA,CAAA,mBAAA,CAAA,aA7Ma,CAAA,KAAA,6BA6Mb,CAAA,0BAAA,CAAA,qBAAA,CAAA,cA7Ma,CAAA,eA6Mb,CAAA,cAAA,4FAvMa,CAAA,cA4Mb,sCAAA,CAAA,cA5Ma,iFAiNb,CAAA,cA3MY,8EAAA,CAMD,wDA0MX,gBAAA,CAAA,cA1MW,mBAMK,CAAA,0CAyMhB,oBAzMgB,CDmBhB,wDAMR,oBACI,CAOA,wDAAA,gBAAA,CAAA,wBACI,KAAA,oCAQJ,CAAA,CAAA,6CACI,KAAA,+BC1EW,CAAA,CAAA,8CAAA,KAAA,oCAAA,CAAA,CAAA,+CAAA,KAAA,oCDwFsB,CAAA,CAAA,yBCzFrB,KAAA,cADM,CAAA,CAAA,mNDwGtB,QAAA,CACA,SAGJ,CAAA,KAAA,UAAA,CAAA,qBAAA,CAAA,aACA,CAAA,qBACA,CAAA,qBAAA,CAAA,IAAA,QAAA,CAAA,iBACA,CAAA,OAAA,QAAA,CAAA,eAAA,CAAA,SACA,CAAA,cAAA,CAAA,sCACA,QACA,CAAA,cAAA,CAAA,mBAAA,CAAA,MAAA,wBACA,CAAA,gBAAA,CAAA,SAAA,QAAA,CAAA,OAAA,UAAA,CAAA,+CAGI,iBAAA,CAAA,eACA,CAAA,MAAA,eAGJ,CAAA,WACI,eAAA,CAAA,kBAAA,cAAA,CAAA,eAcJ,CAAA,aAKA,CAAA,kBAWA,OAAA,CAAA,QACI,CAAA,aAAA,CAAA,mBACA,CAAA,aAAA,CAAA,EAAA,aAAA,CAAA,oBAAA,CAAA,4BAQA,CAAA,eAQJ,cAEI,CAAA,2EAQJ,CAAA,KACI,aAAA,CAUJ,YAAA,kBAEI,CAOJ,yBAEI,CAAA,wCAAA,CAAA,gCAUA,CAAA,MAAA,aAAA,CAAA,QAAA,aAAA,CAAA,aAAA,CAAA,iBAAA,CAAA,sBAAA,CAAA,IAAA,aAMJ,CAAA,IAAA,SAII,CAAA,aACA,gBAAA,CAAA,cAAA,mBAAA,CAAA,gDAAA,yBAMJ,CAAA,wHAkBI,iBAAA,CAAA,SAAA,CAMJ,4GAWI,6BAMJ,CAAA,SACI,sBAOJ,CAAA,SAAA,aAAA,CACI,kFA4BA,WAAA,CAAA,cAAA,4BAAA,CAAA,mBAAA,CAAA,yCAAA,uBAAA,CAAA,6BAAA,yBAAA,CAAA,YAAA,CAAA,QAAA,aAAA,CAAA,kBAAA,YAAA,CEtUJ,kBACI,UAAA,CDocY,WAAA,CAGA,sBAAA,CCrcZ,wBAAA,CACA,cAAA,CACA,KAAA,CACA,MAAA,CACA,YAAA,CACA,kBAAA,CACA,6BAAA,CD+bY,yBAAA,CC7bZ,kCD0bY,cAAA,CAGA,yBAAA,CC1bZ,uCACI,aAAA,CACA,eAAA,CACA,UAAA,CAIR,qBACI,2BAAA,CACA,YAAA,CAEA,wBAAA,CD+aY,6BAAA,CC7aZ,gBAAA,CAGJ,uBACI,YAAA,CAGJ,uBACI,UAAA,CDqaY,2BAAA,CCnaZ,mCACI,aAAA","file":"main.3ff1daf6.chunk.css","sourcesContent":["@font-face{font-family:\"Gotham-Book\";src:local(☺),url(\"../font/Gotham-Book.woff2\") format(\"truetype\"),url(\"../font/Gotham-Book.woff\") format(\"truetype\")}@font-face{font-family:\"Gotham-Bold\";src:local(☺),url(\"../font/Gotham-Bold.woff2\") format(\"truetype\"),url(\"../font/Gotham-Bold.woff\") format(\"truetype\")}@font-face{font-family:\"Gotham-Medium\";src:local(☺),url(\"../font/Gotham-Medium.woff2\") format(\"truetype\"),url(\"../font/Gotham-Medium.woff\") format(\"truetype\")}@font-face{font-family:\"Gotham-Light\";src:local(☺),url(\"../font/Gotham-Light.woff2\") format(\"truetype\"),url(\"../font/Gotham-Light.woff\") format(\"truetype\")}@font-face{font-family:\"NotoSansKR-Black\";src:local(☺),url(\"../font/NotoSansKR-Black.woff2\") format(\"truetype\"),url(\"../font/NotoSansKR-Black.woff\") format(\"truetype\")}@font-face{font-family:\"NotoSansKR-Bold\";src:local(☺),url(\"../font/NotoSansKR-Bold.woff2\") format(\"truetype\"),url(\"../font/NotoSansKR-Bold.woff\") format(\"truetype\")}@font-face{font-family:\"NotoSansKR-Medium\";src:local(☺),url(\"../font/NotoSansKR-Medium.woff2\") format(\"truetype\"),url(\"../font/NotoSansKR-Medium.woff\") format(\"truetype\")}@font-face{font-family:\"NotoSansKR-DemiLight\";src:local(☺),url(\"../font/NotoSansKR-DemiLight.woff2\") format(\"truetype\"),url(\"../font/NotoSansKR-DemiLight.woff\") format(\"truetype\")}@font-face{font-family:\"NotoSansKR-Regular\";src:local(☺),url(\"../font/NotoSansKR-Regular.woff2\") format(\"truetype\"),url(\"../font/NotoSansKR-Regular.woff\") format(\"truetype\")}@font-face{font-family:\"NotoSansKR-Thin\";src:local(☺),url(\"../font/NotoSansKR-Thin.woff2\") format(\"truetype\"),url(\"../font/NotoSansKR-Thin.woff\") format(\"truetype\")}/*! reset */*,*::before,*::after{box-sizing:inherit;letter-spacing:inherit;line-height:inherit;color:inherit}html{text-size-adjust:100%;font-size:14px;font-weight:400}html:lang(ko){font-family:\"NotoSansKR-Regular\",\"Malgun Gothic\",\"맑은 고딕\",Dotum,\"돋움\",arial,verdana,sans-serif}html:lang(en){font-family:Helvetica,Arial,sans-serif}html:lang(ja){font-family:\"Meiryo\",\"メイリオ\",\"ヒラギノ角ゴ Pro W3\",\"Hiragino Kaku Gothic Pro\",sans-serif}html:lang(zh){font-family:Helvetica,Arial,\"Microsoft Yahei\",\"微软雅黑\",STXihei,\"华文细黑\",sans-serif}html:lang(ko){line-height:1.15}html:lang(en){line-height:1.15}html:lang(ja){line-height:1.15}html:lang(zh){line-height:1.15}html:lang(ko){word-break:keep-all}html:lang(en){word-break:break-all}html:lang(ja){word-break:break-all}html:lang(zh){word-break:break-all}html:lang(ko){word-wrap:break-word}html:lang(en){word-wrap:break-word}html:lang(ja){word-wrap:break-word}html:lang(zh){word-wrap:break-word}html:lang(ko){letter-spacing:0}html:lang(en){letter-spacing:0}html:lang(ja){letter-spacing:0}html:lang(zh){letter-spacing:0}@media(max-width: 374px){html{font-size:calc(11px + 10 * ((100vw - 280px) / 374))}}@media(min-width: 375px)and (max-width: 750px){html{font-size:calc(14px + 20 * ((100vw - 375px) / 750))}}@media(min-width: 751px)and (max-width: 1023px){html{font-size:calc(14px + 13 * ((100vw - 751px) / 1023))}}@media(min-width: 1024px)and (max-width: 1279px){html{font-size:calc(14px + 12 * ((100vw - 1024px) / 1279))}}@media(min-width: 1280px){html{font-size:14px}}body,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,code,form,fieldset,legend,input,textarea,p,blockquote,th,td,article,aside,canvas,details,figcaption,figure,footer,header,hgroup,nav,section,time,mark,audio,video{margin:0;padding:0}body{color:#000;background-color:#fff;line-height:1;letter-spacing:-0.02em;box-sizing:border-box}img{border:0;border-style:none}button{border:0;background:none;padding:0;cursor:pointer}button,input,select,optgroup,textarea{margin:0;font-size:100%;font-family:inherit}table{border-collapse:collapse;border-spacing:0}fieldset{border:0}legend{color:#000}address,caption,cite,code,dfn,em,strong,th,var{font-style:normal;font-weight:normal}ol,ul{list-style:none}caption,th{text-align:left}h1,h2,h3,h4,h5,h6{font-size:100%;font-weight:normal;line-height:1}caption,hr,legend{width:0px;height:0px;font-size:1px;text-indent:-9999em;line-height:0}a{color:inherit;text-decoration:none;background-color:rgba(0,0,0,0)}a:visited span{border:inherit}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */main{display:block}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}button,input{overflow:visible}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}progress{vertical-align:baseline}textarea{overflow:auto}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}template{display:none}[hidden]{display:none}","// ie10 ~ ie11 에만 적용되는 css 를 만들때 사용하는 미디어쿼리 소스\r\n//@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\r\n//    // IE10+ CSS here\r\n//    .selectbox{\r\n//        // 텍스트 수직 중앙정렬을 위해서 ie10 ~ 11 속성 재정의\r\n//        select{\r\n//            padding:12px 0 10px 15px;\r\n//            height:auto;\r\n//        }\r\n//    }\r\n//}\r\n\r\n//- 변수 경로 사용하는 방법\r\n// background:url('#{$currentUrl}images/common/ko_bg_test01.jpg')\r\n\r\n\r\n// ******************** code comments ********************\r\n// 기본 변수 세팅\r\n// $global-background-color: #ffffff; - 기본 배경 컬러 설정\r\n// $global-font-color: #000000; - 기본 폰트 컬러 설정\r\n// $global-font-size: 10px !default; - 기본 폰트 크기 설정\r\n// ******************** code comments ********************\r\n$global-background-color: #ffffff;\r\n$global-font-color: #000000;\r\n$global-font-size: 14px !default;\r\n\r\n\r\n// ******************** code comments ********************\r\n// 언어별 설정 <html lang=\"\">\r\n// font-familu, line-height, word-break, word-wrap, letter-spacing\r\n// ******************** code comments ********************\r\n$global-font-family: (\r\n    'ko': ('NotoSansKR-Regular','Malgun Gothic', '맑은 고딕', Dotum, '돋움', arial, verdana, sans-serif),\r\n    'en': (Helvetica, Arial, sans-serif),\r\n    'ja': ('Meiryo', 'メイリオ', 'ヒラギノ角ゴ Pro W3', 'Hiragino Kaku Gothic Pro', sans-serif),\r\n    'zh': (Helvetica, Arial, 'Microsoft Yahei','微软雅黑', STXihei, '华文细黑', sans-serif)\r\n);\r\n$global-line-height: (\r\n    'ko': (1.15),\r\n    'en': (1.15),\r\n    'ja': (1.15),\r\n    'zh': (1.15)\r\n);\r\n$global-word-break: (\r\n    'ko': (keep-all),\r\n    'en': (break-all),\r\n    'ja': (break-all),\r\n    'zh': (break-all)\r\n);\r\n$global-word-wrap: (\r\n    'ko': (break-word),\r\n    'en': (break-word),\r\n    'ja': (break-word),\r\n    'zh': (break-word)\r\n);\r\n$global-letter-spacing: (\r\n    'ko': (0),\r\n    'en': (0),\r\n    'ja': (0),\r\n    'zh': (0)\r\n);\r\n\r\n\r\n// ******************** code comments ********************\r\n// 프로젝트 별로 세팅 하기\r\n// 폰트 굵기 참고용\r\n// Thin 100\r\n// Light 300\r\n// Regular 400\r\n// Medium 500\r\n// Bold 700\r\n// Black 900\r\n// 프로젝트내에서 사용되는 폰트 굵기를 모아놓고 관리한다\r\n// ******************** code comments ********************\r\n\r\n\r\n// ******************** code comments ********************\r\n// 프로젝트 별로 세팅 하기\r\n// font size / line-height 참고\r\n// 24 / 36 - 1.5\r\n// 26 / 38 - 1.46\r\n// 28 / 40 - 1.42\r\n// 30 / 42 - 1.4\r\n// 32 / 44 - 1.375\r\n// 34 / 46 - 1.35\r\n// 42 / 54 - 1.28\r\n// 48 / 64 - 1.33\r\n// ******************** code comments ********************\r\n\r\n\r\n// ******************** code comments ********************\r\n// flex 사용 참고용\r\n// flex: 1 1 1; - 자동으로 더 커지게 하고 자동으로 더 줄어들게 하고 기본 값은 없음\r\n// /* flex-grow: 1; flex-shrink: 1; flex-basis: 0%; */\r\n// flex: 1 1 auto; - 자동으로 더 커지게 하고 자동으로 더 줄어들게 하고 기본값은 자동\r\n// /* flex-grow: 1; flex-shrink: 1; flex-basis: auto; */\r\n// flex: 1 1 500px; - 500보다 늘어날 수 있고 500이하로 줄어 들 수 있음, 기본값은 500\r\n// /* flex-grow: 1; flex-shrink: 1; flex-basis: 500px; */\r\n\r\n// /* flex-grow: 0; */ /* 기본값 - flex-basis 이상으로 안 늘어남 */\r\n// /* flex-grow: 1; */ /* flex-basis 보다 늘어남 */\r\n// flex-shrink: 1; /* 기본값 - flex-basis 크기 보다 줄어듬 */\r\n// flex-shrink: 0; /* flex-basis 크기를 최소값으로 고정함 */\r\n// ******************** code comments ********************\r\n\r\n\r\n// ******************** code comments ********************\r\n// z-index 세팅 및 관리\r\n// 기본 z-index를 기준으로 +, - 하여 관리 한다\r\n// 변수명은 되도록 직관적으로 네이밍 한다\r\n// 프로젝트에서 사용되는 모든 z-index 값은 아래 정리 되어야 한다\r\n// 단, z-index:1, z-index:2 등의 10이하 단위들은 컨텐츠내 css 에서 관리한다\r\n// ******************** code comments ********************\r\n$base-z-index: 100; // 기본 z-index\r\n$mobile-mode-dimm-container: $base-z-index + 900; // 반응형 미지원 페이지 안내 컨텐츠 컨테이너 z-index 1000\r\n$popup-zindex: $base-z-index; // 팝업 z-index 100\r\n$global-dimm-zindex: $base-z-index - 10; // 딤드 영역 z-index 90\r\n$gnb-container-zindex: $base-z-index - 15; // pc & mobile gnb z-index 85\r\n$mobile-subpage-header-title-zindex: $base-z-index - 19; // 모바일 서브페이지 헤더 타이틀 fixed z-index 81\r\n$header-scroll-fixed-zindex: $base-z-index - 20; // 헤더 스크롤 fixed z-index 80\r\n\r\n\r\n// ******************** code comments ********************\r\n// 컬러값 변수 설정\r\n// 폰트컬러(color), 배경컬러(background-color), 라인컬러(border)으로 구분한다\r\n// 변수 네이밍에 컬러 코드 값을 사용하여 작성한다\r\n// 프로젝트 초반에 컬러값이 정리가 되지 않을 경우, 변수를 먼저 세팅하고 나중에 디자인팀에 현재 설정된 변수 컬러값을 전달하여 불필요한 컬러값들을 정리 하도록 한다\r\n// ******************** code comments ********************\r\n$font-e1002a: #e1002a;\r\n$font-4051b8: #4051b8;\r\n$font-00bca9: #00bca9;\r\n$font-ffe53f: #ffe53f;\r\n$font-222222: #222222;\r\n$font-666666: #666666;\r\n$font-999999: #999999;\r\n$font-cccccc: #cccccc;\r\n\r\n$bg-eeeeee: #eeeeee;\r\n$bg-f5f5f5: #f5f5f5;\r\n$bg-f9f9f9: #f9f9f9;\r\n$bg-ffe53f: #ffe53f;\r\n$bg-e1002a: #e1002a;\r\n$bg-222222: #222222;\r\n$bg-333333: #333333;\r\n$bg-444444: #444444;\r\n$bg-2b2b2b: #2b2b2b;\r\n\r\n$line-ffe53f: #ffe53f;\r\n$line-e1002a: #e1002a;\r\n$line-222222: #222222;\r\n$line-cccccc: #cccccc;\r\n$line-dddddd: #dddddd;\r\n$line-e5e5e5: #e5e5e5;\r\n$line-f5f5f5: #f5f5f5;\r\n$line-eeeeee: #eeeeee;\r\n$line-999999: #999999;\r\n\r\n// ******************** code comments ********************\r\n// svg background-image 변수\r\n// svg의 사용은 운영을 고려해서 결정해야 함.\r\n// ******************** code comments ********************\r\n$ico-search: \"%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2245.125%22%20height%3D%2245.304%22%20viewBox%3D%220%200%2045.125%2045.304%22%3E%20%20%3Cdefs%3E %20%20%20%20%3Cstyle%3E %20%20%20%20%20%20.cls-1%20%7B %20%20%20%20%20%20%20%20fill%3A%20none%3B %20%20%20%20%20%20%20%20stroke%3A%20%23222%3B %20%20%20%20%20%20%20%20stroke-linecap%3A%20round%3B %20%20%20%20%20%20%20%20stroke-linejoin%3A%20round%3B %20%20%20%20%20%20%20%20stroke-width%3A%204px%3B %20%20%20%20%20%20%7D %20%20%20%20%3C%2Fstyle%3E %20%20%3C%2Fdefs%3E %20%20%3Cg%20id%3D%22icon_%EA%B2%80%EC%83%89%22%20transform%3D%22translate(2.296%202.296)%22%3E %20%20%20%20%3Cellipse%20id%3D%22%ED%83%80%EC%9B%90_27%22%20data-name%3D%22%ED%83%80%EC%9B%90%2027%22%20class%3D%22cls-1%22%20cx%3D%2215.565%22%20cy%3D%2215.571%22%20rx%3D%2215.565%22%20ry%3D%2215.571%22%20transform%3D%22matrix(0.161%2C%20-0.987%2C%200.987%2C%200.161%2C%200%2C%2030.722)%22%2F%3E %20%20%20%20%3Cline%20id%3D%22%EC%84%A0_42%22%20data-name%3D%22%EC%84%A0%2042%22%20class%3D%22cls-1%22%20x1%3D%2210.122%22%20y1%3D%2210.122%22%20transform%3D%22translate(29.878%2030.057)%22%2F%3E %20%20%3C%2Fg%3E %3C%2Fsvg%3E\";\r\n$ico-all-menu: \"%3Csvg%20id%3D%22MO__BTN_menu%22%20data-name%3D%22MO_%20BTN_menu%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2244%22%20height%3D%2235.992%22%20viewBox%3D%220%200%2044%2035.992%22%3E%20%20%3Cdefs%3E %20%20%20%20%3Cstyle%3E %20%20%20%20%20%20.cls-1%20%7B %20%20%20%20%20%20%20%20fill%3A%20%23222%3B %20%20%20%20%20%20%7D %20%20%20%20%3C%2Fstyle%3E %20%20%3C%2Fdefs%3E %20%20%3Crect%20id%3D%22%EC%82%AC%EA%B0%81%ED%98%95_68%22%20data-name%3D%22%EC%82%AC%EA%B0%81%ED%98%95%2068%22%20class%3D%22cls-1%22%20width%3D%2244%22%20height%3D%224%22%20rx%3D%221%22%2F%3E %20%20%3Crect%20id%3D%22%EC%82%AC%EA%B0%81%ED%98%95_69%22%20data-name%3D%22%EC%82%AC%EA%B0%81%ED%98%95%2069%22%20class%3D%22cls-1%22%20width%3D%2244%22%20height%3D%224%22%20rx%3D%221%22%20transform%3D%22translate(0%2015.996)%22%2F%3E %20%20%3Crect%20id%3D%22%EC%82%AC%EA%B0%81%ED%98%95_70%22%20data-name%3D%22%EC%82%AC%EA%B0%81%ED%98%95%2070%22%20class%3D%22cls-1%22%20width%3D%2244%22%20height%3D%224%22%20rx%3D%221%22%20transform%3D%22translate(0%2031.992)%22%2F%3E %3C%2Fsvg%3E\";\r\n$ico-x: \"%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2238.184%22%20height%3D%2238.184%22%20viewBox%3D%220%200%2038.184%2038.184%22%3E%20%20%3Cdefs%3E %20%20%20%20%3Cstyle%3E %20%20%20%20%20%20.cls-1%20%7B %20%20%20%20%20%20%20%20fill%3A%20%23333%3B %20%20%20%20%20%20%7D %20%20%20%20%3C%2Fstyle%3E %20%20%3C%2Fdefs%3E %20%20%3Cg%20id%3D%22%EA%B7%B8%EB%A3%B9_312%22%20data-name%3D%22%EA%B7%B8%EB%A3%B9%20312%22%20transform%3D%22translate(-236.852%20-1036.027)%20rotate(45)%22%3E %20%20%20%20%3Cpath%20id%3D%22%ED%8C%A8%EC%8A%A4_1881%22%20data-name%3D%22%ED%8C%A8%EC%8A%A4%201881%22%20class%3D%22cls-1%22%20d%3D%22M931.69%2C590.553a2%2C2%2C0%2C0%2C1-2-2v-46a2%2C2%2C0%2C0%2C1%2C4%2C0v46A2%2C2%2C0%2C0%2C1%2C931.69%2C590.553Z%22%20transform%3D%22translate(-4.629%20-0.451)%22%2F%3E %20%20%20%20%3Cpath%20id%3D%22%ED%8C%A8%EC%8A%A4_1882%22%20data-name%3D%22%ED%8C%A8%EC%8A%A4%201882%22%20class%3D%22cls-1%22%20d%3D%22M0%2C48a2%2C2%2C0%2C0%2C1-2-2V0A2%2C2%2C0%2C0%2C1%2C0-2%2C2%2C2%2C0%2C0%2C1%2C2%2C0V46A2%2C2%2C0%2C0%2C1%2C0%2C48Z%22%20transform%3D%22translate(950.061%20565.102)%20rotate(90)%22%2F%3E %20%20%3C%2Fg%3E %3C%2Fsvg%3E\";\r\n$ico-plus: \"%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2228%22%20height%3D%2228%22%20viewBox%3D%220%200%2028%2028%22%3E%20%20%3Cdefs%3E %20%20%20%20%3Cstyle%3E %20%20%20%20%20%20.cls-1%20%7B %20%20%20%20%20%20%20%20fill%3A%20%23291a04%3B %20%20%20%20%20%20%7D %20%20%20%20%3C%2Fstyle%3E %20%20%3C%2Fdefs%3E %20%20%3Cg%20id%3D%22%EA%B7%B8%EB%A3%B9_307%22%20data-name%3D%22%EA%B7%B8%EB%A3%B9%20307%22%20transform%3D%22translate(1%201)%22%3E %20%20%20%20%3Cpath%20id%3D%22%ED%8C%A8%EC%8A%A4_1865%22%20data-name%3D%22%ED%8C%A8%EC%8A%A4%201865%22%20class%3D%22cls-1%22%20d%3D%22M2380%2C6573.744h-26a1%2C1%2C0%2C0%2C1%2C0-2h26a1%2C1%2C0%2C0%2C1%2C0%2C2Z%22%20transform%3D%22translate(-2354%20-6559.744)%22%2F%3E %20%20%20%20%3Cpath%20id%3D%22%ED%8C%A8%EC%8A%A4_1866%22%20data-name%3D%22%ED%8C%A8%EC%8A%A4%201866%22%20class%3D%22cls-1%22%20d%3D%22M26%2C1H0A1%2C1%2C0%2C0%2C1-1%2C0%2C1%2C1%2C0%2C0%2C1%2C0-1H26a1%2C1%2C0%2C0%2C1%2C1%2C1A1%2C1%2C0%2C0%2C1%2C26%2C1Z%22%20transform%3D%22translate(13)%20rotate(90)%22%2F%3E %20%20%3C%2Fg%3E %3C%2Fsvg%3E\";\r\n$ico-arrow: \"%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2222.673%22%20height%3D%2239.685%22%20viewBox%3D%220%200%2022.673%2039.685%22%3E%20%20%3Cdefs%3E %20%20%20%20%3Cstyle%3E %20%20%20%20%20%20.cls-1%20%7B %20%20%20%20%20%20%20%20fill%3A%20%23333%3B %20%20%20%20%20%20%7D %20%20%20%20%3C%2Fstyle%3E %20%20%3C%2Fdefs%3E %20%20%3Cpath%20id%3D%22arrow%22%20class%3D%22cls-1%22%20d%3D%22M60.245%2C85.895a1.993%2C1.993%2C0%2C0%2C1-1.381-.554L40.191%2C67.5a2%2C2%2C0%2C0%2C1%2C0-2.892L58.864%2C46.763a2%2C2%2C0%2C1%2C1%2C2.763%2C2.892l-17.16%2C16.4%2C17.16%2C16.4a2%2C2%2C0%2C0%2C1-1.382%2C3.446Z%22%20transform%3D%22translate(-39.573%20-46.209)%22%2F%3E %3C%2Fsvg%3E\";\r\n\r\n// ******************** code comments ********************\r\n// box shadow 샘플\r\n// box-shadow: 8px 8px 8px 0 rgba(0,0,0,0.05);\r\n// PSD - box-shadow: 거리 거리 크기 스프레드 rgba(컬러,컬러,컬러,불투명도)\r\n// 박스 inset - 보더대신 서야 할 때\r\n// box-shadow: inset -1px 1px 0px 0px rgba(221,221,221,1);\r\n// 프로젝트내에서 사용하는 box shadow 를 모아놓고 관리한다\r\n// ******************** code comments ********************\r\n\r\n\r\n// 공통 소스 인클루드 영역\r\n// sass 에서 _를 넣지 않아도 컴파일을 한다.\r\n// visual studio code 에서 cmd + click 해서 파일로 이동할때 import 파일이름에 _를 넣으면 오류가 난다.\r\n//@import 'dev/_src/_scss/mixin';\r\n\r\n\r\n// ******************** code comments ********************\r\n// disabled 속성\r\n// ******************** code comments ********************\r\n@mixin ui-disabled(){\r\n    // disabled 속성 (모던 브라우저)\r\n    &.disabled{\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n        position: relative;\r\n        z-index: -1;\r\n        // disabled 속성 ie10 대응\r\n        @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\r\n            /* IE10+ CSS styles go here */\r\n            &:after{\r\n                content:'';\r\n                position: absolute;\r\n                width:100%;\r\n                height:100%;\r\n                top:0;left:0;\r\n                background:#ffffff;\r\n                opacity: 0;\r\n                z-index: 1;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// ******************** code comments ********************\r\n// 텍스트 말줄임\r\n// ******************** code comments ********************\r\n@mixin ellipsis($line: 1) { // 인자 값의 기본 값은 1\r\n    @if ($line == 1) {\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n    } @else {\r\n        display: -webkit-box;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        -webkit-box-orient: vertical;\r\n        -webkit-line-clamp: $line;\r\n    }\r\n}\r\n\r\n\r\n// ******************** code comments ********************\r\n// 언어별 폰트 설정\r\n// /* 사용 예제 Languages */\r\n// @include languages();\r\n// ******************** code comments ********************\r\n@mixin languages() {\r\n    @each $type, $font-family in $global-font-family {\r\n        &:lang(#{$type}) {\r\n            font-family:$font-family;\r\n        }\r\n    }\r\n    @each $type, $line-height in $global-line-height {\r\n        &:lang(#{$type}) {\r\n            line-height:$line-height;\r\n        }\r\n    }\r\n    @each $type, $word-break in $global-word-break {\r\n        &:lang(#{$type}) {\r\n            word-break:$word-break;\r\n        }\r\n    }\r\n    @each $type, $word-wrap in $global-word-wrap {\r\n        &:lang(#{$type}) {\r\n            word-wrap:$word-wrap;\r\n        }\r\n    }\r\n    @each $type, $letter-spacing in $global-letter-spacing {\r\n        &:lang(#{$type}) {\r\n            letter-spacing:$letter-spacing;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// ******************** code comments ********************\r\n// /**\r\n// * Computes a CSS calc function that betweens a value from\r\n// * A to B over viewport-width A to viewport-width B.\r\n// * Requires a media query to cap the value at B.\r\n// * vw 단위를 활용하여 미디어쿼리 분기의 중간 상태값을\r\n// * 계산해주는 SASS 함수.\r\n// * 간격이나 폰트사이즈에 적용하면 자연스러운\r\n// * 반응형 사이즈 처리가 가능 함.\r\n// * 참고사이트 http://dohoons.com/blog/1364\r\n// */\r\n// 소스 사용예제\r\n// @media (min-width: $small) {\r\n// \tpadding: between(16px, 32px, $small, $medium);\r\n// }\r\n// @media (min-width: $medium) {\r\n// \tpadding: between(32px, 90px, $medium, $large);\r\n// }\r\n// @media (min-width: $large) {\r\n// \tpadding: 90px;\r\n// }\r\n// ******************** code comments ********************\r\n$small: 400px;\r\n$large: 1000px;\r\n@function between($to, $from, $toWidth, $fromWidth) {\r\n    $slope: ($to - $from) / ($toWidth - $fromWidth);\r\n    $base: $from - $slope * $fromWidth;\r\n\r\n    @return calc(#{$base} + #{100vw * $slope});\r\n}\r\n\r\n\r\n// ******************** code comments ********************\r\n// /**\r\n// * Read the article: http://sassbreak.com/viewport-relative-headings-with-sass\r\n// * px 를 vw 로 자동으로 바꿔 줌.\r\n// * max-breakpoint 를 설정하면 미디어쿼리 브레이크 포인트가 됨.\r\n// * 그래서 미디어쿼리 브레이크 포인트에 맞춰 px 가 vw 로 변환됨.\r\n// * 100% 보다 더 크게 적용 하고 싶으면 return 부분을 수정하면됨.\r\n// * 참고사이트 http://sassbreak.com/viewport-relative-headings-with-sass/\r\n// */\r\n// 예) width: get-vw(21px);\r\n// ******************** code comments ********************\r\n// Max breakpoint\r\n$max-breakpoint-main: 1400;\r\n$max-breakpoint-main-height: 720;\r\n\r\n// This could be one of your media query breakpoint variables\r\n$wide-screen: \"(min-width: #{$max-breakpoint-main}px)\";\r\n\r\n// Function\r\n@function get-vw($target) {\r\n    // 1 vw is equal to 1% of the viewport width\r\n    $vw-context: ($max-breakpoint-main * .01) * 1px; // 1% viewport width\r\n    @return ($target/$vw-context) * 1vw; // 100=1, 140=1.4\r\n}\r\n\r\n@function get-vh($target) {\r\n    // 1 vw is equal to 1% of the viewport width\r\n    $vw-context: ($max-breakpoint-main-height * .01) * 1px; // 1% viewport width\r\n    @return ($target/$vw-context) * 1vh;\r\n}\r\n\r\n\r\n// 입력 받은 값의 숫자만 남겨놓고 단위 지우기\r\n// Remove the unit of a length\r\n// @param {Number} $number - Number to remove unit from\r\n// @return {Number} - Unitless number\r\n@function strip-unit($number) {\r\n    @if type-of($number) == 'number' and not unitless($number) {\r\n        @return $number / ($number * 0 + 1);\r\n    }\r\n\r\n    @return $number;\r\n}\r\n\r\n\r\n// ******************** code comments ********************\r\n// px를 rem 변환 (2021.03.22 버전) - 기존버전 보다 다양하게 활용할 수 있음 아래 url 참고 바람.\r\n// reset.css 의 기본 폰트와는 별개로 정해짐. psd 가이드에 맞게 $global-font-size 수정함.\r\n//\r\n// sass 기본 사용법\r\n// @include rem(font-size, 24px); // Simple\r\n// @include rem(padding, 5px 10px); // Multiple values\r\n// @include rem(border-bottom, 1px solid black); // Multiple mixed values\r\n// @include rem(box-shadow, 0 0 2px #ccc, inset 0 0 5px #eee); // Comma-separated values\r\n// // Multiple properties\r\n// @include rem((\r\n//     margin: 10px 5px,\r\n//     text-shadow: (1px 1px #eee, -1px -1px #eee) // Parentheses needed because of comma\r\n// ));\r\n//\r\n// css 출력\r\n// font-size: 24px;\r\n// font-size: 1.5rem;\r\n// padding: 5px 10px;\r\n// padding: 0.3125rem 0.625rem;\r\n// border-bottom: 1px solid black;\r\n// border-bottom: 0.0625rem solid black;\r\n// box-shadow: 0 0 2px #ccc, inset 0 0 5px #eee;\r\n// box-shadow: 0 0 0.125rem #ccc, inset 0 0 0.3125rem #eee;\r\n// margin: 10px 5px;\r\n// margin: 0.625rem 0.3125rem;\r\n// text-shadow: 1px 1px #eee, -1px -1px #eee;\r\n// text-shadow: 0.0625rem 0.0625rem #eee, -0.0625rem -0.0625rem #eee;\r\n//\r\n// rem line-height 사용법\r\n// 예) @include rem(font-size, 23px, 33);\r\n// 가이드) @include rem(font-size, 23px, psd line-height)\r\n//\r\n// libsass (v3.5.0.beta.2)\r\n// https://github.com/pierreburel/sass-rem\r\n// ******************** code comments ********************\r\n\r\n$rem-baseline: $global-font-size !default;\r\n$rem-fallback: true !default;\r\n// 하위브라우저 호환 맞춰야 할때 - false: rem만 출력, true: px,rem 둘다 출력\r\n$rem-px-only: false !default;\r\n// rem 변환이 필요 없을 때 - false: rem 변환 사용(기본), true: rem 변환 사용 안함(px출력)\r\n\r\n@function rem-separator($list, $separator: false) {\r\n    @if $separator == \"comma\" or $separator == \"space\" {\r\n        @return append($list, null, $separator);\r\n    }\r\n\r\n    @if function-exists(\"list-separator\") == true {\r\n        @return list-separator($list);\r\n    }\r\n\r\n    // list-separator polyfill by Hugo Giraudel (https://sass-compatibility.github.io/#list_separator_function)\r\n    $test-list: ();\r\n    @each $item in $list {\r\n        $test-list: append($test-list, $item, space);\r\n    }\r\n\r\n    @return if($test-list == $list, space, comma);\r\n}\r\n\r\n@mixin rem-baseline($zoom: 100%) {\r\n    font-size: $zoom / 16px * $rem-baseline;\r\n}\r\n\r\n@function rem-convert($to, $values...) {\r\n    $result: ();\r\n    $separator: rem-separator($values);\r\n\r\n    @each $value in $values {\r\n        @if type-of($value) == \"number\" and unit($value) == \"rem\" and $to == \"px\" {\r\n            $result: append($result, $value / 1rem * $rem-baseline + 0px, $separator);\r\n        } @else if type-of($value) == \"number\" and unit($value) == \"px\" and $to == \"rem\" {\r\n            $result: append($result, $value / $rem-baseline + 0rem, $separator);\r\n        // line-height 자동으로 넣는 소스\r\n        // } @else if type-of($value) == \"number\" and unit($value) == \"px\" and $to == \"lineheight\" {\r\n        //     $result: append($result, floor((($value + 10) / $value)*100)/100, $separator);\r\n        } @else if type-of($value) == \"list\" {\r\n            $value-separator: rem-separator($value);\r\n            $value: rem-convert($to, $value...);\r\n            $value: rem-separator($value, $value-separator);\r\n            $result: append($result, $value, $separator);\r\n        } @else {\r\n            $result: append($result, $value, $separator);\r\n        }\r\n    }\r\n\r\n    @return if(length($result) == 1, nth($result, 1), $result);\r\n}\r\n\r\n@function rem($values...) {\r\n    @if $rem-px-only {\r\n        @return rem-convert(px, $values...);\r\n    } @else {\r\n        @return rem-convert(rem, $values...);\r\n    }\r\n}\r\n\r\n@mixin rem($properties, $values...) {\r\n    @if type-of($properties) == \"map\" {\r\n        @each $property in map-keys($properties) {\r\n            @include rem($property, map-get($properties, $property));\r\n        }\r\n    // line-height 자동으로 넣는 소스\r\n    // } @else if $properties == \"font-size\"{\r\n    //     @each $property in $properties {\r\n    //         @if $rem-fallback or $rem-px-only {\r\n    //             #{$property}: rem-convert(px, $values...);\r\n    //         }\r\n    //         @if not $rem-px-only {\r\n    //             #{$property}: rem-convert(rem, $values...);\r\n    //         }\r\n    //         line-height: rem-convert(lineheight, $values...);\r\n    //     }\r\n    } @else {\r\n        @each $property in $properties {\r\n            @if $rem-fallback or $rem-px-only {\r\n                #{$property}: rem-convert(px, $values...);\r\n            }\r\n            @if not $rem-px-only {\r\n                #{$property}: rem-convert(rem, $values...);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// ******************** code comments ********************\r\n// px를 em 변환\r\n//\r\n// em 기본 사용법\r\n// @include em(height,51px);\r\n// @include em(padding, 0 15px);\r\n// font-size + line-height 사용법\r\n//\r\n// em line-height 사용법\r\n// 예) @include em(font-size, 23px, 33);\r\n// 가이드) @include em(font-size, 23px, psd line-height)\r\n//\r\n// em border 사용법\r\n// 예) @include em(border, 2px, solid blue);\r\n// 예) @include em(border-left, 20px, solid blue);\r\n//\r\n// reset.css 의 기본 폰트와는 별개로 정해짐. psd 가이드에 맞게 $global-font-size 수정함.\r\n// ******************** code comments ********************\r\n$baseFont : $global-font-size;\r\n@mixin em($target, $values, $line-height:0, $border-info...) {\r\n    $mixin-base-font-size: $baseFont ;\r\n    $px-values: ();\r\n    $em-values: ();\r\n\r\n    @each $value in $values {\r\n        @if $value == 0 or $value == 0px {\r\n            $px-values: join($px-values, 0);\r\n            $em-values: join($em-values, 0);\r\n        } @else if type-of($value) == number and not unitless($value) and (unit($value) == px) {\r\n            $new-em-value: $value / $mixin-base-font-size;\r\n            $px-values: join($px-values, round($value));\r\n            $em-values: join($em-values, #{$new-em-value}em);\r\n        } @else {\r\n            $px-values: join($px-values, round($value * $mixin-base-font-size));\r\n            $em-values: join($em-values, #{$value}em);\r\n        }\r\n    }\r\n    @if $target == 'font-size' {\r\n        @if $line-height == 0 {\r\n            #{$target}: $px-values;\r\n            #{$target}: $em-values;\r\n        } @else{\r\n            #{$target}: $px-values;\r\n            #{$target}: $em-values;\r\n            line-height: $line-height / strip-unit($values);\r\n        }\r\n    } @else if $target == 'border' & 'border-left' & 'border-right' & 'border-top' & 'border-bottom' {\r\n        #{$target}: $px-values $line-height $border-info;\r\n        #{$target}: $em-values $line-height $border-info;\r\n    } @else {\r\n        #{$target}: $px-values;\r\n        #{$target}: $em-values;\r\n    }\r\n}\r\n\r\n// ******************** code comments ********************\r\n// pc, mobile = px & rem & em & vw 전용 스프라이트 믹스인 영역\r\n// pc, mobile = px & rem & em & vw 전용 이미지 background-position 값 설정\r\n// ******************** code comments ********************\r\n@mixin sprite-position-px($sprite) {\r\n    $sprite-offset-x: nth($sprite, 3);\r\n    $sprite-offset-y: nth($sprite, 4);\r\n    background-position: $sprite-offset-x  $sprite-offset-y;\r\n}\r\n@mixin sprite-position-rem($sprite) {\r\n    $sprite-offset-x: rem(nth($sprite, 3));\r\n    $sprite-offset-y: rem(nth($sprite, 4));\r\n    background-position: $sprite-offset-x  $sprite-offset-y;\r\n}\r\n@mixin sprite-position-em($sprite) {\r\n    $sprite-offset-x: em(nth($sprite, 3));\r\n    $sprite-offset-y: em(nth($sprite, 4));\r\n    background-position: $sprite-offset-x  $sprite-offset-y;\r\n}\r\n@mixin sprite-position-vw($sprite) {\r\n    $sprite-offset-x: get-vw(nth($sprite, 3));\r\n    $sprite-offset-y: get-vw(nth($sprite, 4));\r\n    background-position: $sprite-offset-x  $sprite-offset-y;\r\n}\r\n\r\n\r\n// ******************** code comments ********************\r\n// pc, mobile = px & rem & em & vw 전용 스프라이트 믹스인 영역\r\n// pc, mobile = px & rem & em & vw 전용 이미지 background-size 값 설정\r\n// ******************** code comments ********************\r\n@mixin sprite-background-size-px($sprite) {\r\n    $sprite-size-width: nth($sprite, 7);\r\n    $sprite-size-height: nth($sprite, 8);\r\n    background-size: $sprite-size-width  $sprite-size-height;\r\n}\r\n@mixin sprite-background-size-rem($sprite) {\r\n    $sprite-size-width: rem(nth($sprite, 7));\r\n    $sprite-size-height: rem(nth($sprite, 8));\r\n    background-size: $sprite-size-width  $sprite-size-height;\r\n}\r\n@mixin sprite-background-size-em($sprite) {\r\n    $sprite-size-width: em(nth($sprite, 7));\r\n    $sprite-size-height: em(nth($sprite, 8));\r\n    background-size: $sprite-size-width  $sprite-size-height;\r\n}\r\n@mixin sprite-background-size-vw($sprite) {\r\n    $sprite-size-width: get-vw(nth($sprite, 7));\r\n    $sprite-size-height: get-vw(nth($sprite, 8));\r\n    background-size: $sprite-size-width  $sprite-size-height;\r\n}\r\n\r\n\r\n// ******************** code comments ********************\r\n// pc, mobile = px & rem & em & vw 전용 스프라이트 믹스인 영역\r\n// pc, mobile = px & rem & em & vw 전용 이미지 width 값 설정\r\n// ******************** code comments ********************\r\n@mixin sprite-width-px($sprite) {\r\n    width: nth($sprite, 5);\r\n}\r\n@mixin sprite-width-rem($sprite) {\r\n    width: rem(nth($sprite, 5));\r\n}\r\n@mixin sprite-width-em($sprite) {\r\n    width: em(nth($sprite, 5));\r\n}\r\n@mixin sprite-width-vw($sprite) {\r\n    width: get-vw(nth($sprite, 5));\r\n}\r\n\r\n\r\n// ******************** code comments ********************\r\n// pc, mobile = px & rem & em & vw 전용 스프라이트 믹스인 영역\r\n// pc, mobile = px & rem & em & vw 전용 이미지 height 값 설정\r\n// ******************** code comments ********************\r\n@mixin sprite-height-px($sprite) {\r\n    height: nth($sprite, 6);\r\n}\r\n@mixin sprite-height-rem($sprite) {\r\n    height: rem(nth($sprite, 6));\r\n}\r\n@mixin sprite-height-em($sprite) {\r\n    height: em(nth($sprite, 6));\r\n}\r\n@mixin sprite-height-vw($sprite) {\r\n    height: get-vw(nth($sprite, 6));\r\n}\r\n\r\n\r\n// ******************** code comments ********************\r\n// pc px & rem & em & vw 전용 이미지 스프라이트 믹스인 (위 설정값을 가져옴)\r\n// 사용예 pc 버전\r\n// @include sprite-custom(rem, $pc-logo-pc-ko);\r\n// @include sprite-custom(em, $pc-logo-pc-ko);\r\n// @include sprite-custom(px, $pc-logo-pc-ko);\r\n// @include sprite-custom(vw, $pc-logo-pc-ko);\r\n// ******************** code comments ********************\r\n@mixin sprite-custom($unit, $sprite) {\r\n    @include sprite-image($sprite);\r\n\r\n    @if $unit == px{\r\n        @include sprite-position-px($sprite);\r\n        @include sprite-width-px($sprite);\r\n        @include sprite-height-px($sprite);\r\n        @include sprite-background-size-px($sprite);\r\n    } @else if $unit == rem{\r\n        @include sprite-position-px($sprite);\r\n        @include sprite-position-rem($sprite);\r\n        @include sprite-width-px($sprite);\r\n        @include sprite-width-rem($sprite);\r\n        @include sprite-height-px($sprite);\r\n        @include sprite-height-rem($sprite);\r\n        @include sprite-background-size-px($sprite);\r\n        @include sprite-background-size-rem($sprite);\r\n    } @else if $unit == em {\r\n        @include sprite-position-px($sprite);\r\n        @include sprite-position-em($sprite);\r\n        @include sprite-width-px($sprite);\r\n        @include sprite-width-em($sprite);\r\n        @include sprite-height-px($sprite);\r\n        @include sprite-height-em($sprite);\r\n        @include sprite-background-size-px($sprite);\r\n        @include sprite-background-size-em($sprite);\r\n    } @else if $unit == vw {\r\n        @include sprite-position-vw($sprite);\r\n        @include sprite-width-vw($sprite);\r\n        @include sprite-height-vw($sprite);\r\n        @include sprite-background-size-vw($sprite);\r\n    }\r\n}\r\n\r\n\r\n// ******************** code comments ********************\r\n// mobile px & rem & em & vw 전용 이미지 스프라이트 믹스인 (위 설정값을 가져옴)\r\n// 사용예 mobile 버전\r\n// @include retina-sprite-custom(rem, $mobile-logo-pc-ko-group);\r\n// @include retina-sprite-custom(em, $mobile-logo-pc-ko-group);\r\n// @include retina-sprite-custom(px, $mobile-logo-pc-ko-group);\r\n// @include retina-sprite-custom(vw, $mobile-logo-pc-ko-group);\r\n// ******************** code comments ********************\r\n@mixin retina-sprite-custom($unit, $retina-group) {\r\n    $normal-sprite: nth($retina-group, 2);\r\n    $retina-sprite: nth($retina-group, 3);\r\n    @include sprite-image($retina-sprite);\r\n    background-repeat: no-repeat;\r\n\r\n    @if $unit == px{\r\n        @include sprite-position-px($normal-sprite);\r\n        @include sprite-width-px($normal-sprite);\r\n        @include sprite-height-px($normal-sprite);\r\n        @include sprite-background-size-px($normal-sprite);\r\n    } @else if $unit == rem{\r\n        @include sprite-position-px($normal-sprite);\r\n        @include sprite-position-rem($normal-sprite);\r\n        @include sprite-width-px($normal-sprite);\r\n        @include sprite-width-rem($normal-sprite);\r\n        @include sprite-height-px($normal-sprite);\r\n        @include sprite-height-rem($normal-sprite);\r\n        @include sprite-background-size-px($normal-sprite);\r\n        @include sprite-background-size-rem($normal-sprite);\r\n    } @else if $unit == em{\r\n        @include sprite-position-px($normal-sprite);\r\n        @include sprite-position-em($normal-sprite);\r\n        @include sprite-width-px($normal-sprite);\r\n        @include sprite-width-em($normal-sprite);\r\n        @include sprite-height-px($normal-sprite);\r\n        @include sprite-height-em($normal-sprite);\r\n        @include sprite-background-size-px($normal-sprite);\r\n        @include sprite-background-size-em($normal-sprite);\r\n    } @else if $unit == vw{\r\n        @include sprite-position-vw($normal-sprite);\r\n        @include sprite-width-vw($normal-sprite);\r\n        @include sprite-height-vw($normal-sprite);\r\n        @include sprite-background-size-vw($normal-sprite);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// $title\r\n// ____________________________________________________________________________\r\n//\r\n//    SCSS Unit Conversion v.2.1.2\r\n//\r\n//\r\n//    Links:\r\n//    GitHub   https://github.com/jakob-e/unitconversion\r\n//    Codepen  https://codepen.io/jakob-e/pen/AHunv\r\n// ____________________________________________________________________________\r\n//\r\n//   Function               Input units\r\n//\r\n//   Absolute length\r\n//   px(input);             px, pt, pc, in, mm, cm, em, rem, number\r\n//   pt(input);             px, pt, pc, in, mm, cm, em, rem, number\r\n//   pc(input);             px, pt, pc, in, mm, cm, em, rem, number\r\n//   in(input);             px, pt, pc, in, mm, cm, em, rem, number\r\n//   mm(input);             px, pt, pc, in, mm, cm, em, rem, number\r\n//   cm(input);             px, pt, pc, in, mm, cm, em, rem, number\r\n//\r\n//   Relative length\r\n//   em(input);             px, pt, pc, in, mm, cm, em, rem, number\r\n//   rem(input);            px, pt, pc, in, mm, cm, em, rem, number\r\n//   ex(input);             ex, number\r\n//   ch(input);             ch, number\r\n//   vw(input);             vw, number\r\n//   vh(input);             vh, number\r\n//   vmin(input);           vmin, number\r\n//   vmax(input);           vmax, number\r\n//\r\n//   Angle\r\n//   deg(input);            deg, rad, grad, turn, number\r\n//   rad(input);            deg, rad, grad, turn, number\r\n//   grad(input);           deg, rad, grad, turn, number\r\n//   turn(input);           deg, rad, grad, turn, number\r\n//\r\n//   Resolution\r\n//   dpi(input);            dpi, dpcm, dppx, number\r\n//   dpcm(input);           dpi, dpcm, dppx, number\r\n//   dppx(input);           dpi, dpcm, dppx, number\r\n//\r\n//   Time\r\n//   s(input);              s, ms, number\r\n//   ms(input);             s, ms, number\r\n//\r\n//   Frequency\r\n//   hz(input);             hz, khz, number\r\n//   khz(input);            hz, khz, number\r\n//\r\n//   String\r\n//   str(input);            anything not null\r\n//\r\n//   Number, int and uint\r\n//   num(input);            px, pt, pc, in, mm, cm, em, rem, ex, ch,\r\n//                          vw, vh, vmin, vmax, deg, rad, grad, turn,\r\n//                          dpi, dpcm, dppx, s, ms, hz, khz, number\r\n//   int(input);            as number\r\n//   uint(input);           as number\r\n//\r\n//   ratio                  number to fraction\r\n//\r\n//   Aliases\r\n//   string(input);\r\n//   number(input);\r\n//\r\n// ____________________________________________________________________________\r\n\r\n// Base font size in pixel for converting em and rem to absolute lengths.\r\n$unit-base-font-size: $global-font-size;\r\n\r\n\r\n// Absolute lengths\r\n@function px($input){ @return to-unit(px, $input); }\r\n@function pt($input){ @return to-unit(pt, $input); }\r\n@function pc($input){ @return to-unit(pc, $input); }\r\n@function in($input){ @return to-unit(in, $input); }\r\n@function mm($input){ @return to-unit(mm, $input); }\r\n@function cm($input){ @return to-unit(cm, $input); }\r\n\r\n// Angles\r\n@function deg($input){ @return to-unit(deg, $input); }\r\n@function rad($input){ @return to-unit(rad, $input); }\r\n@function grad($input){ @return to-unit(grad, $input); }\r\n@function turn($input){ @return to-unit(turn, $input); }\r\n\r\n// Resolution\r\n@function dpi($input){ @return to-unit(dpi, $input); }\r\n@function dpcm($input){ @return to-unit(dpcm, $input); }\r\n@function dppx($input){ @return to-unit(dppx, $input); }\r\n\r\n// Time\r\n@function ms($input){ @return to-unit(ms, $input); }\r\n@function s($input){ @return to-unit(s, $input); }\r\n\r\n// Frequencies\r\n@function hz($input){ @return to-unit(hz, $input);}\r\n@function khz($input){ @return to-unit(khz, $input); }\r\n\r\n// Relative lengths\r\n@function em($input...){\r\n    $em: to-unit(em, nth($input,1));\r\n    // Adjust for compounds (visual size)\r\n    @if length($input) > 1 {\r\n        @for $i from 2 through length($input){\r\n            $em: $em / num(em(nth($input,$i)));\r\n        }\r\n    }\r\n    @return $em;\r\n}\r\n@function rem($input){ @return to-unit(rem, num(em($input))); }\r\n\r\n// Inconvertible relative lengths – depends on font\r\n@function ex($input){ @return to-unit(ex, $input); }\r\n@function ch($input){ @return to-unit(ch, $input); }\r\n\r\n// Viewport\r\n@function vw($input){ @return to-unit(vw, $input); }\r\n@function vh($input){ @return to-unit(vh, $input); }\r\n@function vmin($input){ @return to-unit(vmin, $input); }\r\n@function vmax($input){ @return to-unit(vmax, $input); }\r\n\r\n// Strings and numbers\r\n@function str($input){ @return #{$input};  }\r\n@function num($input){\r\n    @if type-of($input) != number {\r\n        @error 'Could not convert `#{$input}` - must be `type-of number`';\r\n        @return null;\r\n    }\r\n    @return $input/($input*0+1);\r\n}\r\n@function int($input){\r\n    $num: num($input);\r\n    @return if($num<0, ceil($num), floor($num));\r\n}\r\n@function uint($input){ @return abs(int($input)); }\r\n\r\n// Aliases\r\n@function string($input){ @return str($input);}\r\n@function number($input){ @return num($input);}\r\n\r\n\r\n// Conversion function\r\n@function to-unit($unit, $input){\r\n    // Test against valid CSS units\r\n    $to-unit: map-get((\r\n            px: 0px, pt: 0pt, pc: 0pc, in: 0in, mm: 0mm, cm: 0cm, // absolute length\r\n            em: 0em, rem: 0rem, ch: 0ch, ex: 0ex,                 // relative length - font based\r\n            vw: 0vw, vh: 0vh, vmin: 0vmin, vmax: 0vmax,           // relative length - viewport based\r\n            deg: 0deg, turn: 0turn, grad: 0grad, rad: 0rad,       // angle\r\n            s: 0s, ms: 0ms,                                       // time\r\n            hz: 0Hz, khz: 0kHz,                                   // frequency\r\n            dpi: 0dpi, dpcm: 0dpcm, dppx: 0dppx,                  // resolution\r\n            pct: 0%, percent: 0%, num: 0, number: 0               // percent or number\r\n    ), $unit);\r\n\r\n    // Error handling – wrong $unit\r\n    // Incomparable units are caught in convertion\r\n    @if not $to-unit {\r\n        @error 'Could not convert to `#{$unit}` – must be a valid CSS unit';\r\n        @return null;\r\n    }\r\n\r\n    // Number/incomparable conversion\r\n    @if index(num number ex ch vw vh vmin vmax, $unit) {\r\n        $value: num($input);\r\n    }\r\n\r\n    // EM/REM convertion using px as base\r\n    @if index(em rem, unit($input)) {\r\n        $input: 0px + num($input) * $unit-base-font-size/1px;\r\n    }\r\n    @if index(em rem, $unit) and not unitless($input) {\r\n        $input: 0px + $input;\r\n        $input: num($input) * 1px/$unit-base-font-size;\r\n    }\r\n\r\n    // Bug fix – resolution units seems to be flipped\r\n    @if index(dpi dpcm dppx, $unit){\r\n        $units: (dppx: 0dppx, dpcm: 0dpcm, dpi: 0dpi);\r\n        $input-unit: map-get($units, unit($input));\r\n        $input: if(1dppx < 95dpi,num($input-unit + (num($input) + $to-unit)),$input);\r\n    }\r\n\r\n    // Convert\r\n    @return $to-unit + $input;\r\n}\r\n\r\n//  Convert number to ratio (fraction)\r\n//  ratio(1.7777778) =>   16/9\r\n@function ratio($x, $y: null){\r\n    @if not $y {\r\n        $n: $x; $y: 1;\r\n        @while $y < 10 {\r\n            $x:  $n * 10 - ((10 - $y) * $n);\r\n            @if $x == round($x){ @return #{$x}/#{$y}; }\r\n            @else { $y: $y + 1; }\r\n        }\r\n        $x: round($n * 1000000); $y: 1000000;\r\n        @while $x % 10 == 0 { $x: $x/10; $y: $y/10; }\r\n        @while $x % 5 == 0 { $x: $x/5; $y: $y/5; }\r\n        @while $x % 2 == 0 { $x: $x/2; $y: $y/2; }\r\n        @return #{$x}/#{$y};\r\n    }\r\n    @else if $x == round($x) and $y == round($y){ @return #{$x}/#{$y}; }\r\n    @warn 'X and Y must be integers'; @return false;\r\n}\r\n\r\n","@import '../css/_setting';\r\n\r\n$headerSpace : 80px;\r\n\r\n.header{\r\n    width:100%;\r\n    @include rem(height, $headerSpace);\r\n    background-color:rgb(17, 82, 126);\r\n    position:fixed;\r\n    top:0;\r\n    left:0;\r\n    display:flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    @include rem(padding, 0 20px);\r\n    .logo{\r\n        @include rem(font-size, 25px);\r\n    }\r\n    .home_link{\r\n        display:block;\r\n        font-weight:600;\r\n        color:#fff;\r\n    }\r\n}\r\n\r\n.container{\r\n    max-width:calc(100% - 40px);\r\n    width : 1240px;\r\n    margin:0 auto;\r\n    background-color:rgb(0, 73, 128);\r\n    @include rem(margin-top, $headerSpace);\r\n    min-height:100vh;\r\n}\r\n\r\n.nav_wrapper{\r\n    display:flex;\r\n}\r\n\r\n.first_depth{\r\n    color:#fff;\r\n    @include rem(margin-left, 15px);\r\n    &:first-child{\r\n        margin-left:0;\r\n    }\r\n}"]}